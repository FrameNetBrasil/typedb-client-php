<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/session.proto

namespace Typedb\Protocol\Session\Open;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Session.Open.Res</code>
 */
class Res extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes session_id = 1;</code>
     */
    protected $session_id = '';
    /**
     * Generated from protobuf field <code>int32 server_duration_millis = 2;</code>
     */
    protected $server_duration_millis = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $session_id
     *     @type int $server_duration_millis
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Session::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes session_id = 1;</code>
     * @return string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * Generated from protobuf field <code>bytes session_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkString($var, False);
        $this->session_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 server_duration_millis = 2;</code>
     * @return int
     */
    public function getServerDurationMillis()
    {
        return $this->server_duration_millis;
    }

    /**
     * Generated from protobuf field <code>int32 server_duration_millis = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setServerDurationMillis($var)
    {
        GPBUtil::checkInt32($var);
        $this->server_duration_millis = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Res::class, \Typedb\Protocol\Session_Open_Res::class);

