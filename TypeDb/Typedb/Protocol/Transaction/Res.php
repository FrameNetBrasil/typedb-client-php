<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/transaction.proto

namespace Typedb\Protocol\Transaction;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Transaction.Res</code>
 */
class Res extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes req_id = 1;</code>
     */
    protected $req_id = '';
    protected $res;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $req_id
     *     @type \Typedb\Protocol\Transaction\Open\Res $open_res
     *     @type \Typedb\Protocol\Transaction\Commit\Res $commit_res
     *     @type \Typedb\Protocol\Transaction\Rollback\Res $rollback_res
     *     @type \Typedb\Protocol\QueryManager\Res $query_manager_res
     *     @type \Typedb\Protocol\ConceptManager\Res $concept_manager_res
     *     @type \Typedb\Protocol\LogicManager\Res $logic_manager_res
     *     @type \Typedb\Protocol\Rule\Res $rule_res
     *     @type \Typedb\Protocol\Type\Res $type_res
     *     @type \Typedb\Protocol\Thing\Res $thing_res
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes req_id = 1;</code>
     * @return string
     */
    public function getReqId()
    {
        return $this->req_id;
    }

    /**
     * Generated from protobuf field <code>bytes req_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setReqId($var)
    {
        GPBUtil::checkString($var, False);
        $this->req_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Open.Res open_res = 2;</code>
     * @return \Typedb\Protocol\Transaction\Open\Res|null
     */
    public function getOpenRes()
    {
        return $this->readOneof(2);
    }

    public function hasOpenRes()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Open.Res open_res = 2;</code>
     * @param \Typedb\Protocol\Transaction\Open\Res $var
     * @return $this
     */
    public function setOpenRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Transaction\Open\Res::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Commit.Res commit_res = 3;</code>
     * @return \Typedb\Protocol\Transaction\Commit\Res|null
     */
    public function getCommitRes()
    {
        return $this->readOneof(3);
    }

    public function hasCommitRes()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Commit.Res commit_res = 3;</code>
     * @param \Typedb\Protocol\Transaction\Commit\Res $var
     * @return $this
     */
    public function setCommitRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Transaction\Commit\Res::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Rollback.Res rollback_res = 4;</code>
     * @return \Typedb\Protocol\Transaction\Rollback\Res|null
     */
    public function getRollbackRes()
    {
        return $this->readOneof(4);
    }

    public function hasRollbackRes()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Rollback.Res rollback_res = 4;</code>
     * @param \Typedb\Protocol\Transaction\Rollback\Res $var
     * @return $this
     */
    public function setRollbackRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Transaction\Rollback\Res::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Res query_manager_res = 5;</code>
     * @return \Typedb\Protocol\QueryManager\Res|null
     */
    public function getQueryManagerRes()
    {
        return $this->readOneof(5);
    }

    public function hasQueryManagerRes()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Res query_manager_res = 5;</code>
     * @param \Typedb\Protocol\QueryManager\Res $var
     * @return $this
     */
    public function setQueryManagerRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Res::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.Res concept_manager_res = 6;</code>
     * @return \Typedb\Protocol\ConceptManager\Res|null
     */
    public function getConceptManagerRes()
    {
        return $this->readOneof(6);
    }

    public function hasConceptManagerRes()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.Res concept_manager_res = 6;</code>
     * @param \Typedb\Protocol\ConceptManager\Res $var
     * @return $this
     */
    public function setConceptManagerRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\Res::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.Res logic_manager_res = 7;</code>
     * @return \Typedb\Protocol\LogicManager\Res|null
     */
    public function getLogicManagerRes()
    {
        return $this->readOneof(7);
    }

    public function hasLogicManagerRes()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.Res logic_manager_res = 7;</code>
     * @param \Typedb\Protocol\LogicManager\Res $var
     * @return $this
     */
    public function setLogicManagerRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\LogicManager\Res::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule.Res rule_res = 8;</code>
     * @return \Typedb\Protocol\Rule\Res|null
     */
    public function getRuleRes()
    {
        return $this->readOneof(8);
    }

    public function hasRuleRes()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule.Res rule_res = 8;</code>
     * @param \Typedb\Protocol\Rule\Res $var
     * @return $this
     */
    public function setRuleRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Rule\Res::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type.Res type_res = 9;</code>
     * @return \Typedb\Protocol\Type\Res|null
     */
    public function getTypeRes()
    {
        return $this->readOneof(9);
    }

    public function hasTypeRes()
    {
        return $this->hasOneof(9);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type.Res type_res = 9;</code>
     * @param \Typedb\Protocol\Type\Res $var
     * @return $this
     */
    public function setTypeRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Type\Res::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Thing.Res thing_res = 10;</code>
     * @return \Typedb\Protocol\Thing\Res|null
     */
    public function getThingRes()
    {
        return $this->readOneof(10);
    }

    public function hasThingRes()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Thing.Res thing_res = 10;</code>
     * @param \Typedb\Protocol\Thing\Res $var
     * @return $this
     */
    public function setThingRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Thing\Res::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRes()
    {
        return $this->whichOneof("res");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Res::class, \Typedb\Protocol\Transaction_Res::class);

