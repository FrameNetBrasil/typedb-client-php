<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/transaction.proto

namespace Typedb\Protocol\Transaction\Open;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Transaction.Open.Req</code>
 */
class Req extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes session_id = 1;</code>
     */
    protected $session_id = '';
    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Type type = 2;</code>
     */
    protected $type = 0;
    /**
     * Generated from protobuf field <code>.typedb.protocol.Options options = 3;</code>
     */
    protected $options = null;
    /**
     * Generated from protobuf field <code>int32 network_latency_millis = 4;</code>
     */
    protected $network_latency_millis = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $session_id
     *     @type int $type
     *     @type \Typedb\Protocol\Options $options
     *     @type int $network_latency_millis
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes session_id = 1;</code>
     * @return string
     */
    public function getSessionId()
    {
        return $this->session_id;
    }

    /**
     * Generated from protobuf field <code>bytes session_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSessionId($var)
    {
        GPBUtil::checkString($var, False);
        $this->session_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Type type = 2;</code>
     * @return int
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Type type = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Typedb\Protocol\Transaction\Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Options options = 3;</code>
     * @return \Typedb\Protocol\Options|null
     */
    public function getOptions()
    {
        return $this->options;
    }

    public function hasOptions()
    {
        return isset($this->options);
    }

    public function clearOptions()
    {
        unset($this->options);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Options options = 3;</code>
     * @param \Typedb\Protocol\Options $var
     * @return $this
     */
    public function setOptions($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Options::class);
        $this->options = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>int32 network_latency_millis = 4;</code>
     * @return int
     */
    public function getNetworkLatencyMillis()
    {
        return $this->network_latency_millis;
    }

    /**
     * Generated from protobuf field <code>int32 network_latency_millis = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setNetworkLatencyMillis($var)
    {
        GPBUtil::checkInt32($var);
        $this->network_latency_millis = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Req::class, \Typedb\Protocol\Transaction_Open_Req::class);

