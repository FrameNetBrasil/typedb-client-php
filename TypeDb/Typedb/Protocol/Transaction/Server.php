<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/transaction.proto

namespace Typedb\Protocol\Transaction;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Transaction.Server</code>
 */
class Server extends \Google\Protobuf\Internal\Message
{
    protected $server;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\Transaction\Res $res
     *     @type \Typedb\Protocol\Transaction\ResPart $res_part
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Transaction::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Res res = 2;</code>
     * @return \Typedb\Protocol\Transaction\Res|null
     */
    public function getRes()
    {
        return $this->readOneof(2);
    }

    public function hasRes()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.Res res = 2;</code>
     * @param \Typedb\Protocol\Transaction\Res $var
     * @return $this
     */
    public function setRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Transaction\Res::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.ResPart res_part = 3;</code>
     * @return \Typedb\Protocol\Transaction\ResPart|null
     */
    public function getResPart()
    {
        return $this->readOneof(3);
    }

    public function hasResPart()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Transaction.ResPart res_part = 3;</code>
     * @param \Typedb\Protocol\Transaction\ResPart $var
     * @return $this
     */
    public function setResPart($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Transaction\ResPart::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getServer()
    {
        return $this->whichOneof("server");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Server::class, \Typedb\Protocol\Transaction_Server::class);

