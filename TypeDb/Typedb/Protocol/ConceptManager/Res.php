<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/concept.proto

namespace Typedb\Protocol\ConceptManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.ConceptManager.Res</code>
 */
class Res extends \Google\Protobuf\Internal\Message
{
    protected $res;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\ConceptManager\GetThingType\Res $get_thing_type_res
     *     @type \Typedb\Protocol\ConceptManager\GetThing\Res $get_thing_res
     *     @type \Typedb\Protocol\ConceptManager\PutEntityType\Res $put_entity_type_res
     *     @type \Typedb\Protocol\ConceptManager\PutAttributeType\Res $put_attribute_type_res
     *     @type \Typedb\Protocol\ConceptManager\PutRelationType\Res $put_relation_type_res
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Concept::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThingType.Res get_thing_type_res = 1;</code>
     * @return \Typedb\Protocol\ConceptManager\GetThingType\Res|null
     */
    public function getGetThingTypeRes()
    {
        return $this->readOneof(1);
    }

    public function hasGetThingTypeRes()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThingType.Res get_thing_type_res = 1;</code>
     * @param \Typedb\Protocol\ConceptManager\GetThingType\Res $var
     * @return $this
     */
    public function setGetThingTypeRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\GetThingType\Res::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThing.Res get_thing_res = 2;</code>
     * @return \Typedb\Protocol\ConceptManager\GetThing\Res|null
     */
    public function getGetThingRes()
    {
        return $this->readOneof(2);
    }

    public function hasGetThingRes()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThing.Res get_thing_res = 2;</code>
     * @param \Typedb\Protocol\ConceptManager\GetThing\Res $var
     * @return $this
     */
    public function setGetThingRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\GetThing\Res::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutEntityType.Res put_entity_type_res = 3;</code>
     * @return \Typedb\Protocol\ConceptManager\PutEntityType\Res|null
     */
    public function getPutEntityTypeRes()
    {
        return $this->readOneof(3);
    }

    public function hasPutEntityTypeRes()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutEntityType.Res put_entity_type_res = 3;</code>
     * @param \Typedb\Protocol\ConceptManager\PutEntityType\Res $var
     * @return $this
     */
    public function setPutEntityTypeRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\PutEntityType\Res::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutAttributeType.Res put_attribute_type_res = 4;</code>
     * @return \Typedb\Protocol\ConceptManager\PutAttributeType\Res|null
     */
    public function getPutAttributeTypeRes()
    {
        return $this->readOneof(4);
    }

    public function hasPutAttributeTypeRes()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutAttributeType.Res put_attribute_type_res = 4;</code>
     * @param \Typedb\Protocol\ConceptManager\PutAttributeType\Res $var
     * @return $this
     */
    public function setPutAttributeTypeRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\PutAttributeType\Res::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutRelationType.Res put_relation_type_res = 5;</code>
     * @return \Typedb\Protocol\ConceptManager\PutRelationType\Res|null
     */
    public function getPutRelationTypeRes()
    {
        return $this->readOneof(5);
    }

    public function hasPutRelationTypeRes()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutRelationType.Res put_relation_type_res = 5;</code>
     * @param \Typedb\Protocol\ConceptManager\PutRelationType\Res $var
     * @return $this
     */
    public function setPutRelationTypeRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\PutRelationType\Res::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRes()
    {
        return $this->whichOneof("res");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Res::class, \Typedb\Protocol\ConceptManager_Res::class);

