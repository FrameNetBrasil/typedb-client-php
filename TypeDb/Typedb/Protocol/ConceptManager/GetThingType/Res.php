<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/concept.proto

namespace Typedb\Protocol\ConceptManager\GetThingType;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.ConceptManager.GetThingType.Res</code>
 */
class Res extends \Google\Protobuf\Internal\Message
{
    protected $res;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\Type $thing_type
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Concept::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type thing_type = 1;</code>
     * @return \Typedb\Protocol\Type|null
     */
    public function getThingType()
    {
        return $this->readOneof(1);
    }

    public function hasThingType()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type thing_type = 1;</code>
     * @param \Typedb\Protocol\Type $var
     * @return $this
     */
    public function setThingType($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Type::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRes()
    {
        return $this->whichOneof("res");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Res::class, \Typedb\Protocol\ConceptManager_GetThingType_Res::class);

