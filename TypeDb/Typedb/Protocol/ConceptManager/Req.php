<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/concept.proto

namespace Typedb\Protocol\ConceptManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.ConceptManager.Req</code>
 */
class Req extends \Google\Protobuf\Internal\Message
{
    protected $req;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\ConceptManager\GetThingType\Req $get_thing_type_req
     *     @type \Typedb\Protocol\ConceptManager\GetThing\Req $get_thing_req
     *     @type \Typedb\Protocol\ConceptManager\PutEntityType\Req $put_entity_type_req
     *     @type \Typedb\Protocol\ConceptManager\PutAttributeType\Req $put_attribute_type_req
     *     @type \Typedb\Protocol\ConceptManager\PutRelationType\Req $put_relation_type_req
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Concept::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThingType.Req get_thing_type_req = 1;</code>
     * @return \Typedb\Protocol\ConceptManager\GetThingType\Req|null
     */
    public function getGetThingTypeReq()
    {
        return $this->readOneof(1);
    }

    public function hasGetThingTypeReq()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThingType.Req get_thing_type_req = 1;</code>
     * @param \Typedb\Protocol\ConceptManager\GetThingType\Req $var
     * @return $this
     */
    public function setGetThingTypeReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\GetThingType\Req::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThing.Req get_thing_req = 2;</code>
     * @return \Typedb\Protocol\ConceptManager\GetThing\Req|null
     */
    public function getGetThingReq()
    {
        return $this->readOneof(2);
    }

    public function hasGetThingReq()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.GetThing.Req get_thing_req = 2;</code>
     * @param \Typedb\Protocol\ConceptManager\GetThing\Req $var
     * @return $this
     */
    public function setGetThingReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\GetThing\Req::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutEntityType.Req put_entity_type_req = 3;</code>
     * @return \Typedb\Protocol\ConceptManager\PutEntityType\Req|null
     */
    public function getPutEntityTypeReq()
    {
        return $this->readOneof(3);
    }

    public function hasPutEntityTypeReq()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutEntityType.Req put_entity_type_req = 3;</code>
     * @param \Typedb\Protocol\ConceptManager\PutEntityType\Req $var
     * @return $this
     */
    public function setPutEntityTypeReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\PutEntityType\Req::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutAttributeType.Req put_attribute_type_req = 4;</code>
     * @return \Typedb\Protocol\ConceptManager\PutAttributeType\Req|null
     */
    public function getPutAttributeTypeReq()
    {
        return $this->readOneof(4);
    }

    public function hasPutAttributeTypeReq()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutAttributeType.Req put_attribute_type_req = 4;</code>
     * @param \Typedb\Protocol\ConceptManager\PutAttributeType\Req $var
     * @return $this
     */
    public function setPutAttributeTypeReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\PutAttributeType\Req::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutRelationType.Req put_relation_type_req = 5;</code>
     * @return \Typedb\Protocol\ConceptManager\PutRelationType\Req|null
     */
    public function getPutRelationTypeReq()
    {
        return $this->readOneof(5);
    }

    public function hasPutRelationTypeReq()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptManager.PutRelationType.Req put_relation_type_req = 5;</code>
     * @param \Typedb\Protocol\ConceptManager\PutRelationType\Req $var
     * @return $this
     */
    public function setPutRelationTypeReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptManager\PutRelationType\Req::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getReq()
    {
        return $this->whichOneof("req");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Req::class, \Typedb\Protocol\ConceptManager_Req::class);

