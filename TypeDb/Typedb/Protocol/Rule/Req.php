<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/logic.proto

namespace Typedb\Protocol\Rule;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Rule.Req</code>
 */
class Req extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string label = 1;</code>
     */
    protected $label = '';
    protected $req;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $label
     *     @type \Typedb\Protocol\Rule\Delete\Req $rule_delete_req
     *     @type \Typedb\Protocol\Rule\SetLabel\Req $rule_set_label_req
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Logic::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string label = 1;</code>
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Generated from protobuf field <code>string label = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule.Delete.Req rule_delete_req = 100;</code>
     * @return \Typedb\Protocol\Rule\Delete\Req|null
     */
    public function getRuleDeleteReq()
    {
        return $this->readOneof(100);
    }

    public function hasRuleDeleteReq()
    {
        return $this->hasOneof(100);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule.Delete.Req rule_delete_req = 100;</code>
     * @param \Typedb\Protocol\Rule\Delete\Req $var
     * @return $this
     */
    public function setRuleDeleteReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Rule\Delete\Req::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule.SetLabel.Req rule_set_label_req = 101;</code>
     * @return \Typedb\Protocol\Rule\SetLabel\Req|null
     */
    public function getRuleSetLabelReq()
    {
        return $this->readOneof(101);
    }

    public function hasRuleSetLabelReq()
    {
        return $this->hasOneof(101);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule.SetLabel.Req rule_set_label_req = 101;</code>
     * @param \Typedb\Protocol\Rule\SetLabel\Req $var
     * @return $this
     */
    public function setRuleSetLabelReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Rule\SetLabel\Req::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getReq()
    {
        return $this->whichOneof("req");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Req::class, \Typedb\Protocol\Rule_Req::class);

