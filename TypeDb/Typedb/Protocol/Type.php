<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/concept.proto

namespace Typedb\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Type</code>
 */
class Type extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string label = 1;</code>
     */
    protected $label = '';
    /**
     * Generated from protobuf field <code>string scope = 2;</code>
     */
    protected $scope = '';
    /**
     * Generated from protobuf field <code>.typedb.protocol.Type.Encoding encoding = 3;</code>
     */
    protected $encoding = 0;
    /**
     * Generated from protobuf field <code>.typedb.protocol.AttributeType.ValueType value_type = 4;</code>
     */
    protected $value_type = 0;
    /**
     * Generated from protobuf field <code>bool root = 5;</code>
     */
    protected $root = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $label
     *     @type string $scope
     *     @type int $encoding
     *     @type int $value_type
     *     @type bool $root
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Concept::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string label = 1;</code>
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Generated from protobuf field <code>string label = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setLabel($var)
    {
        GPBUtil::checkString($var, True);
        $this->label = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string scope = 2;</code>
     * @return string
     */
    public function getScope()
    {
        return $this->scope;
    }

    /**
     * Generated from protobuf field <code>string scope = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setScope($var)
    {
        GPBUtil::checkString($var, True);
        $this->scope = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type.Encoding encoding = 3;</code>
     * @return int
     */
    public function getEncoding()
    {
        return $this->encoding;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type.Encoding encoding = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setEncoding($var)
    {
        GPBUtil::checkEnum($var, \Typedb\Protocol\Type\Encoding::class);
        $this->encoding = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.AttributeType.ValueType value_type = 4;</code>
     * @return int
     */
    public function getValueType()
    {
        return $this->value_type;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.AttributeType.ValueType value_type = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setValueType($var)
    {
        GPBUtil::checkEnum($var, \Typedb\Protocol\AttributeType\ValueType::class);
        $this->value_type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool root = 5;</code>
     * @return bool
     */
    public function getRoot()
    {
        return $this->root;
    }

    /**
     * Generated from protobuf field <code>bool root = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setRoot($var)
    {
        GPBUtil::checkBool($var);
        $this->root = $var;

        return $this;
    }

}

