<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/query.proto

namespace Typedb\Protocol\QueryManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.QueryManager.ResPart</code>
 */
class ResPart extends \Google\Protobuf\Internal\Message
{
    protected $res;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\QueryManager\PBMatch\ResPart $match_res_part
     *     @type \Typedb\Protocol\QueryManager\MatchGroup\ResPart $match_group_res_part
     *     @type \Typedb\Protocol\QueryManager\MatchGroupAggregate\ResPart $match_group_aggregate_res_part
     *     @type \Typedb\Protocol\QueryManager\Insert\ResPart $insert_res_part
     *     @type \Typedb\Protocol\QueryManager\Update\ResPart $update_res_part
     *     @type \Typedb\Protocol\QueryManager\Explain\ResPart $explain_res_part
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Match.ResPart match_res_part = 100;</code>
     * @return \Typedb\Protocol\QueryManager\PBMatch\ResPart|null
     */
    public function getMatchResPart()
    {
        return $this->readOneof(100);
    }

    public function hasMatchResPart()
    {
        return $this->hasOneof(100);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Match.ResPart match_res_part = 100;</code>
     * @param \Typedb\Protocol\QueryManager\PBMatch\ResPart $var
     * @return $this
     */
    public function setMatchResPart($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\PBMatch\ResPart::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroup.ResPart match_group_res_part = 101;</code>
     * @return \Typedb\Protocol\QueryManager\MatchGroup\ResPart|null
     */
    public function getMatchGroupResPart()
    {
        return $this->readOneof(101);
    }

    public function hasMatchGroupResPart()
    {
        return $this->hasOneof(101);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroup.ResPart match_group_res_part = 101;</code>
     * @param \Typedb\Protocol\QueryManager\MatchGroup\ResPart $var
     * @return $this
     */
    public function setMatchGroupResPart($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\MatchGroup\ResPart::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroupAggregate.ResPart match_group_aggregate_res_part = 102;</code>
     * @return \Typedb\Protocol\QueryManager\MatchGroupAggregate\ResPart|null
     */
    public function getMatchGroupAggregateResPart()
    {
        return $this->readOneof(102);
    }

    public function hasMatchGroupAggregateResPart()
    {
        return $this->hasOneof(102);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroupAggregate.ResPart match_group_aggregate_res_part = 102;</code>
     * @param \Typedb\Protocol\QueryManager\MatchGroupAggregate\ResPart $var
     * @return $this
     */
    public function setMatchGroupAggregateResPart($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\MatchGroupAggregate\ResPart::class);
        $this->writeOneof(102, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Insert.ResPart insert_res_part = 103;</code>
     * @return \Typedb\Protocol\QueryManager\Insert\ResPart|null
     */
    public function getInsertResPart()
    {
        return $this->readOneof(103);
    }

    public function hasInsertResPart()
    {
        return $this->hasOneof(103);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Insert.ResPart insert_res_part = 103;</code>
     * @param \Typedb\Protocol\QueryManager\Insert\ResPart $var
     * @return $this
     */
    public function setInsertResPart($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Insert\ResPart::class);
        $this->writeOneof(103, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Update.ResPart update_res_part = 104;</code>
     * @return \Typedb\Protocol\QueryManager\Update\ResPart|null
     */
    public function getUpdateResPart()
    {
        return $this->readOneof(104);
    }

    public function hasUpdateResPart()
    {
        return $this->hasOneof(104);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Update.ResPart update_res_part = 104;</code>
     * @param \Typedb\Protocol\QueryManager\Update\ResPart $var
     * @return $this
     */
    public function setUpdateResPart($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Update\ResPart::class);
        $this->writeOneof(104, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Explain.ResPart explain_res_part = 105;</code>
     * @return \Typedb\Protocol\QueryManager\Explain\ResPart|null
     */
    public function getExplainResPart()
    {
        return $this->readOneof(105);
    }

    public function hasExplainResPart()
    {
        return $this->hasOneof(105);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Explain.ResPart explain_res_part = 105;</code>
     * @param \Typedb\Protocol\QueryManager\Explain\ResPart $var
     * @return $this
     */
    public function setExplainResPart($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Explain\ResPart::class);
        $this->writeOneof(105, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRes()
    {
        return $this->whichOneof("res");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ResPart::class, \Typedb\Protocol\QueryManager_ResPart::class);

