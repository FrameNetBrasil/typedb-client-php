<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/query.proto

namespace Typedb\Protocol\QueryManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.QueryManager.Res</code>
 */
class Res extends \Google\Protobuf\Internal\Message
{
    protected $res;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\QueryManager\Define\Res $define_res
     *     @type \Typedb\Protocol\QueryManager\Undefine\Res $undefine_res
     *     @type \Typedb\Protocol\QueryManager\MatchAggregate\Res $match_aggregate_res
     *     @type \Typedb\Protocol\QueryManager\Delete\Res $delete_res
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Define.Res define_res = 100;</code>
     * @return \Typedb\Protocol\QueryManager\Define\Res|null
     */
    public function getDefineRes()
    {
        return $this->readOneof(100);
    }

    public function hasDefineRes()
    {
        return $this->hasOneof(100);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Define.Res define_res = 100;</code>
     * @param \Typedb\Protocol\QueryManager\Define\Res $var
     * @return $this
     */
    public function setDefineRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Define\Res::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Undefine.Res undefine_res = 101;</code>
     * @return \Typedb\Protocol\QueryManager\Undefine\Res|null
     */
    public function getUndefineRes()
    {
        return $this->readOneof(101);
    }

    public function hasUndefineRes()
    {
        return $this->hasOneof(101);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Undefine.Res undefine_res = 101;</code>
     * @param \Typedb\Protocol\QueryManager\Undefine\Res $var
     * @return $this
     */
    public function setUndefineRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Undefine\Res::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchAggregate.Res match_aggregate_res = 102;</code>
     * @return \Typedb\Protocol\QueryManager\MatchAggregate\Res|null
     */
    public function getMatchAggregateRes()
    {
        return $this->readOneof(102);
    }

    public function hasMatchAggregateRes()
    {
        return $this->hasOneof(102);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchAggregate.Res match_aggregate_res = 102;</code>
     * @param \Typedb\Protocol\QueryManager\MatchAggregate\Res $var
     * @return $this
     */
    public function setMatchAggregateRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\MatchAggregate\Res::class);
        $this->writeOneof(102, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Delete.Res delete_res = 104;</code>
     * @return \Typedb\Protocol\QueryManager\Delete\Res|null
     */
    public function getDeleteRes()
    {
        return $this->readOneof(104);
    }

    public function hasDeleteRes()
    {
        return $this->hasOneof(104);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Delete.Res delete_res = 104;</code>
     * @param \Typedb\Protocol\QueryManager\Delete\Res $var
     * @return $this
     */
    public function setDeleteRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Delete\Res::class);
        $this->writeOneof(104, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRes()
    {
        return $this->whichOneof("res");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Res::class, \Typedb\Protocol\QueryManager_Res::class);

