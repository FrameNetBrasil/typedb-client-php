<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/query.proto

namespace Typedb\Protocol\QueryManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.QueryManager.Req</code>
 */
class Req extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.typedb.protocol.Options options = 1;</code>
     */
    protected $options = null;
    protected $req;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\Options $options
     *     @type \Typedb\Protocol\QueryManager\Define\Req $define_req
     *     @type \Typedb\Protocol\QueryManager\Undefine\Req $undefine_req
     *     @type \Typedb\Protocol\QueryManager\PBMatch\Req $match_req
     *     @type \Typedb\Protocol\QueryManager\MatchAggregate\Req $match_aggregate_req
     *     @type \Typedb\Protocol\QueryManager\MatchGroup\Req $match_group_req
     *     @type \Typedb\Protocol\QueryManager\MatchGroupAggregate\Req $match_group_aggregate_req
     *     @type \Typedb\Protocol\QueryManager\Insert\Req $insert_req
     *     @type \Typedb\Protocol\QueryManager\Delete\Req $delete_req
     *     @type \Typedb\Protocol\QueryManager\Update\Req $update_req
     *     @type \Typedb\Protocol\QueryManager\Explain\Req $explain_req
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Query::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Options options = 1;</code>
     * @return \Typedb\Protocol\Options|null
     */
    public function getOptions()
    {
        return $this->options;
    }

    public function hasOptions()
    {
        return isset($this->options);
    }

    public function clearOptions()
    {
        unset($this->options);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Options options = 1;</code>
     * @param \Typedb\Protocol\Options $var
     * @return $this
     */
    public function setOptions($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Options::class);
        $this->options = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Define.Req define_req = 100;</code>
     * @return \Typedb\Protocol\QueryManager\Define\Req|null
     */
    public function getDefineReq()
    {
        return $this->readOneof(100);
    }

    public function hasDefineReq()
    {
        return $this->hasOneof(100);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Define.Req define_req = 100;</code>
     * @param \Typedb\Protocol\QueryManager\Define\Req $var
     * @return $this
     */
    public function setDefineReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Define\Req::class);
        $this->writeOneof(100, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Undefine.Req undefine_req = 101;</code>
     * @return \Typedb\Protocol\QueryManager\Undefine\Req|null
     */
    public function getUndefineReq()
    {
        return $this->readOneof(101);
    }

    public function hasUndefineReq()
    {
        return $this->hasOneof(101);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Undefine.Req undefine_req = 101;</code>
     * @param \Typedb\Protocol\QueryManager\Undefine\Req $var
     * @return $this
     */
    public function setUndefineReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Undefine\Req::class);
        $this->writeOneof(101, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Match.Req match_req = 102;</code>
     * @return \Typedb\Protocol\QueryManager\PBMatch\Req|null
     */
    public function getMatchReq()
    {
        return $this->readOneof(102);
    }

    public function hasMatchReq()
    {
        return $this->hasOneof(102);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Match.Req match_req = 102;</code>
     * @param \Typedb\Protocol\QueryManager\PBMatch\Req $var
     * @return $this
     */
    public function setMatchReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\PBMatch\Req::class);
        $this->writeOneof(102, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchAggregate.Req match_aggregate_req = 103;</code>
     * @return \Typedb\Protocol\QueryManager\MatchAggregate\Req|null
     */
    public function getMatchAggregateReq()
    {
        return $this->readOneof(103);
    }

    public function hasMatchAggregateReq()
    {
        return $this->hasOneof(103);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchAggregate.Req match_aggregate_req = 103;</code>
     * @param \Typedb\Protocol\QueryManager\MatchAggregate\Req $var
     * @return $this
     */
    public function setMatchAggregateReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\MatchAggregate\Req::class);
        $this->writeOneof(103, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroup.Req match_group_req = 104;</code>
     * @return \Typedb\Protocol\QueryManager\MatchGroup\Req|null
     */
    public function getMatchGroupReq()
    {
        return $this->readOneof(104);
    }

    public function hasMatchGroupReq()
    {
        return $this->hasOneof(104);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroup.Req match_group_req = 104;</code>
     * @param \Typedb\Protocol\QueryManager\MatchGroup\Req $var
     * @return $this
     */
    public function setMatchGroupReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\MatchGroup\Req::class);
        $this->writeOneof(104, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroupAggregate.Req match_group_aggregate_req = 105;</code>
     * @return \Typedb\Protocol\QueryManager\MatchGroupAggregate\Req|null
     */
    public function getMatchGroupAggregateReq()
    {
        return $this->readOneof(105);
    }

    public function hasMatchGroupAggregateReq()
    {
        return $this->hasOneof(105);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.MatchGroupAggregate.Req match_group_aggregate_req = 105;</code>
     * @param \Typedb\Protocol\QueryManager\MatchGroupAggregate\Req $var
     * @return $this
     */
    public function setMatchGroupAggregateReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\MatchGroupAggregate\Req::class);
        $this->writeOneof(105, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Insert.Req insert_req = 106;</code>
     * @return \Typedb\Protocol\QueryManager\Insert\Req|null
     */
    public function getInsertReq()
    {
        return $this->readOneof(106);
    }

    public function hasInsertReq()
    {
        return $this->hasOneof(106);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Insert.Req insert_req = 106;</code>
     * @param \Typedb\Protocol\QueryManager\Insert\Req $var
     * @return $this
     */
    public function setInsertReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Insert\Req::class);
        $this->writeOneof(106, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Delete.Req delete_req = 107;</code>
     * @return \Typedb\Protocol\QueryManager\Delete\Req|null
     */
    public function getDeleteReq()
    {
        return $this->readOneof(107);
    }

    public function hasDeleteReq()
    {
        return $this->hasOneof(107);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Delete.Req delete_req = 107;</code>
     * @param \Typedb\Protocol\QueryManager\Delete\Req $var
     * @return $this
     */
    public function setDeleteReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Delete\Req::class);
        $this->writeOneof(107, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Update.Req update_req = 108;</code>
     * @return \Typedb\Protocol\QueryManager\Update\Req|null
     */
    public function getUpdateReq()
    {
        return $this->readOneof(108);
    }

    public function hasUpdateReq()
    {
        return $this->hasOneof(108);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Update.Req update_req = 108;</code>
     * @param \Typedb\Protocol\QueryManager\Update\Req $var
     * @return $this
     */
    public function setUpdateReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Update\Req::class);
        $this->writeOneof(108, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Explain.Req explain_req = 109;</code>
     * @return \Typedb\Protocol\QueryManager\Explain\Req|null
     */
    public function getExplainReq()
    {
        return $this->readOneof(109);
    }

    public function hasExplainReq()
    {
        return $this->hasOneof(109);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.QueryManager.Explain.Req explain_req = 109;</code>
     * @param \Typedb\Protocol\QueryManager\Explain\Req $var
     * @return $this
     */
    public function setExplainReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\QueryManager\Explain\Req::class);
        $this->writeOneof(109, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getReq()
    {
        return $this->whichOneof("req");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Req::class, \Typedb\Protocol\QueryManager_Req::class);

