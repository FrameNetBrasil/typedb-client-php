<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/answer.proto

namespace Typedb\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Numeric</code>
 */
class Numeric extends \Google\Protobuf\Internal\Message
{
    protected $value;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $long_value
     *     @type float $double_value
     *     @type bool $nan
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Answer::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int64 long_value = 1;</code>
     * @return int|string
     */
    public function getLongValue()
    {
        return $this->readOneof(1);
    }

    public function hasLongValue()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>int64 long_value = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setLongValue($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>double double_value = 2;</code>
     * @return float
     */
    public function getDoubleValue()
    {
        return $this->readOneof(2);
    }

    public function hasDoubleValue()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>double double_value = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setDoubleValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool nan = 3;</code>
     * @return bool
     */
    public function getNan()
    {
        return $this->readOneof(3);
    }

    public function hasNan()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>bool nan = 3;</code>
     * @param bool $var
     * @return $this
     */
    public function setNan($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getValue()
    {
        return $this->whichOneof("value");
    }

}

