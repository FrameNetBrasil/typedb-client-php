<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/concept.proto

namespace Typedb\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Thing</code>
 */
class Thing extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes iid = 1;</code>
     */
    protected $iid = '';
    /**
     * Generated from protobuf field <code>.typedb.protocol.Type type = 2;</code>
     */
    protected $type = null;
    /**
     * Generated from protobuf field <code>.typedb.protocol.Attribute.Value value = 3;</code>
     */
    protected $value = null;
    /**
     * Generated from protobuf field <code>bool inferred = 4;</code>
     */
    protected $inferred = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $iid
     *     @type \Typedb\Protocol\Type $type
     *     @type \Typedb\Protocol\Attribute\Value $value
     *     @type bool $inferred
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Concept::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes iid = 1;</code>
     * @return string
     */
    public function getIid()
    {
        return $this->iid;
    }

    /**
     * Generated from protobuf field <code>bytes iid = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setIid($var)
    {
        GPBUtil::checkString($var, False);
        $this->iid = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type type = 2;</code>
     * @return \Typedb\Protocol\Type|null
     */
    public function getType()
    {
        return $this->type;
    }

    public function hasType()
    {
        return isset($this->type);
    }

    public function clearType()
    {
        unset($this->type);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type type = 2;</code>
     * @param \Typedb\Protocol\Type $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Type::class);
        $this->type = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Attribute.Value value = 3;</code>
     * @return \Typedb\Protocol\Attribute\Value|null
     */
    public function getValue()
    {
        return $this->value;
    }

    public function hasValue()
    {
        return isset($this->value);
    }

    public function clearValue()
    {
        unset($this->value);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Attribute.Value value = 3;</code>
     * @param \Typedb\Protocol\Attribute\Value $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Attribute\Value::class);
        $this->value = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bool inferred = 4;</code>
     * @return bool
     */
    public function getInferred()
    {
        return $this->inferred;
    }

    /**
     * Generated from protobuf field <code>bool inferred = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setInferred($var)
    {
        GPBUtil::checkBool($var);
        $this->inferred = $var;

        return $this;
    }

}

