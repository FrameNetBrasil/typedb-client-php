<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/logic.proto

namespace Typedb\Protocol\LogicManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.LogicManager.Res</code>
 */
class Res extends \Google\Protobuf\Internal\Message
{
    protected $res;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\LogicManager\GetRule\Res $get_rule_res
     *     @type \Typedb\Protocol\LogicManager\PutRule\Res $put_rule_res
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Logic::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.GetRule.Res get_rule_res = 1;</code>
     * @return \Typedb\Protocol\LogicManager\GetRule\Res|null
     */
    public function getGetRuleRes()
    {
        return $this->readOneof(1);
    }

    public function hasGetRuleRes()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.GetRule.Res get_rule_res = 1;</code>
     * @param \Typedb\Protocol\LogicManager\GetRule\Res $var
     * @return $this
     */
    public function setGetRuleRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\LogicManager\GetRule\Res::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.PutRule.Res put_rule_res = 2;</code>
     * @return \Typedb\Protocol\LogicManager\PutRule\Res|null
     */
    public function getPutRuleRes()
    {
        return $this->readOneof(2);
    }

    public function hasPutRuleRes()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.PutRule.Res put_rule_res = 2;</code>
     * @param \Typedb\Protocol\LogicManager\PutRule\Res $var
     * @return $this
     */
    public function setPutRuleRes($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\LogicManager\PutRule\Res::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getRes()
    {
        return $this->whichOneof("res");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Res::class, \Typedb\Protocol\LogicManager_Res::class);

