<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/logic.proto

namespace Typedb\Protocol\LogicManager;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.LogicManager.Req</code>
 */
class Req extends \Google\Protobuf\Internal\Message
{
    protected $req;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\LogicManager\GetRule\Req $get_rule_req
     *     @type \Typedb\Protocol\LogicManager\PutRule\Req $put_rule_req
     *     @type \Typedb\Protocol\LogicManager\GetRules\Req $get_rules_req
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Logic::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.GetRule.Req get_rule_req = 1;</code>
     * @return \Typedb\Protocol\LogicManager\GetRule\Req|null
     */
    public function getGetRuleReq()
    {
        return $this->readOneof(1);
    }

    public function hasGetRuleReq()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.GetRule.Req get_rule_req = 1;</code>
     * @param \Typedb\Protocol\LogicManager\GetRule\Req $var
     * @return $this
     */
    public function setGetRuleReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\LogicManager\GetRule\Req::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.PutRule.Req put_rule_req = 2;</code>
     * @return \Typedb\Protocol\LogicManager\PutRule\Req|null
     */
    public function getPutRuleReq()
    {
        return $this->readOneof(2);
    }

    public function hasPutRuleReq()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.PutRule.Req put_rule_req = 2;</code>
     * @param \Typedb\Protocol\LogicManager\PutRule\Req $var
     * @return $this
     */
    public function setPutRuleReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\LogicManager\PutRule\Req::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.GetRules.Req get_rules_req = 3;</code>
     * @return \Typedb\Protocol\LogicManager\GetRules\Req|null
     */
    public function getGetRulesReq()
    {
        return $this->readOneof(3);
    }

    public function hasGetRulesReq()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.LogicManager.GetRules.Req get_rules_req = 3;</code>
     * @param \Typedb\Protocol\LogicManager\GetRules\Req $var
     * @return $this
     */
    public function setGetRulesReq($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\LogicManager\GetRules\Req::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getReq()
    {
        return $this->whichOneof("req");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Req::class, \Typedb\Protocol\LogicManager_Req::class);

