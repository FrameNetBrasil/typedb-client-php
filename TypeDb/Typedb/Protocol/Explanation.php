<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/logic.proto

namespace Typedb\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.Explanation</code>
 */
class Explanation extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule rule = 1;</code>
     */
    protected $rule = null;
    /**
     * Generated from protobuf field <code>map<string, .typedb.protocol.Explanation.VarList> var_mapping = 2;</code>
     */
    private $var_mapping;
    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptMap condition = 3;</code>
     */
    protected $condition = null;
    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptMap conclusion = 4;</code>
     */
    protected $conclusion = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\Rule $rule
     *     @type array|\Google\Protobuf\Internal\MapField $var_mapping
     *     @type \Typedb\Protocol\ConceptMap $condition
     *     @type \Typedb\Protocol\ConceptMap $conclusion
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Logic::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule rule = 1;</code>
     * @return \Typedb\Protocol\Rule|null
     */
    public function getRule()
    {
        return $this->rule;
    }

    public function hasRule()
    {
        return isset($this->rule);
    }

    public function clearRule()
    {
        unset($this->rule);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Rule rule = 1;</code>
     * @param \Typedb\Protocol\Rule $var
     * @return $this
     */
    public function setRule($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Rule::class);
        $this->rule = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>map<string, .typedb.protocol.Explanation.VarList> var_mapping = 2;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getVarMapping()
    {
        return $this->var_mapping;
    }

    /**
     * Generated from protobuf field <code>map<string, .typedb.protocol.Explanation.VarList> var_mapping = 2;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setVarMapping($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Typedb\Protocol\Explanation\VarList::class);
        $this->var_mapping = $arr;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptMap condition = 3;</code>
     * @return \Typedb\Protocol\ConceptMap|null
     */
    public function getCondition()
    {
        return $this->condition;
    }

    public function hasCondition()
    {
        return isset($this->condition);
    }

    public function clearCondition()
    {
        unset($this->condition);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptMap condition = 3;</code>
     * @param \Typedb\Protocol\ConceptMap $var
     * @return $this
     */
    public function setCondition($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptMap::class);
        $this->condition = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptMap conclusion = 4;</code>
     * @return \Typedb\Protocol\ConceptMap|null
     */
    public function getConclusion()
    {
        return $this->conclusion;
    }

    public function hasConclusion()
    {
        return isset($this->conclusion);
    }

    public function clearConclusion()
    {
        unset($this->conclusion);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.ConceptMap conclusion = 4;</code>
     * @param \Typedb\Protocol\ConceptMap $var
     * @return $this
     */
    public function setConclusion($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\ConceptMap::class);
        $this->conclusion = $var;

        return $this;
    }

}

