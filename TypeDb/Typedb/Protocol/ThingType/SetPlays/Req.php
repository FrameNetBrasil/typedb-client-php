<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: common/concept.proto

namespace Typedb\Protocol\ThingType\SetPlays;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>typedb.protocol.ThingType.SetPlays.Req</code>
 */
class Req extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.typedb.protocol.Type role = 1;</code>
     */
    protected $role = null;
    protected $overridden;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Typedb\Protocol\Type $role
     *     @type \Typedb\Protocol\Type $overridden_role
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Common\Concept::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type role = 1;</code>
     * @return \Typedb\Protocol\Type|null
     */
    public function getRole()
    {
        return $this->role;
    }

    public function hasRole()
    {
        return isset($this->role);
    }

    public function clearRole()
    {
        unset($this->role);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type role = 1;</code>
     * @param \Typedb\Protocol\Type $var
     * @return $this
     */
    public function setRole($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Type::class);
        $this->role = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type overridden_role = 2;</code>
     * @return \Typedb\Protocol\Type|null
     */
    public function getOverriddenRole()
    {
        return $this->readOneof(2);
    }

    public function hasOverriddenRole()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.typedb.protocol.Type overridden_role = 2;</code>
     * @param \Typedb\Protocol\Type $var
     * @return $this
     */
    public function setOverriddenRole($var)
    {
        GPBUtil::checkMessage($var, \Typedb\Protocol\Type::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getOverridden()
    {
        return $this->whichOneof("overridden");
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Req::class, \Typedb\Protocol\ThingType_SetPlays_Req::class);

